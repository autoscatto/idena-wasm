name: Release

on:
  push:
    tags:
      - '*'
defaults:
  run:
    shell: bash
jobs:
  release:
    env:
      BINARY_NAME: libidena_wasm.a
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: actions-rs/cargo@v1
        if: matrix.os == 'windows-latest'
        with:
          toolchain: stable-x86_64-pc-windows-gnu
          command: build
          args: --release --all-features

      - uses: actions-rs/cargo@v1
        if: matrix.os != 'windows-latest'
        with:
          command: build
          args: --release --all-features

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Get asset name
        id: asset
        run: |
          gitTag=${{ steps.tag.outputs.tag }}
          tag=${gitTag:1}
          echo "GIT_TAG=${tag}" >> $GITHUB_ENV

      - name: Rename output file
        if: matrix.os == 'ubuntu-latest'
        run: |
          asset_name="target/release/libidena_wasm_linux-${tag}.a"
          mv target/release/${BINARY_NAME} ${asset_name}
          echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV

      - name: Rename output file
        if: matrix.os == 'windows-latest'
        run: |
          asset_name="target/release/libidena_wasm_win-${tag}.a"
          ls target/release
          mv target/release/${BINARY_NAME} ${asset_name}
          echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV

      - name: Rename output file
        if: matrix.os == 'macos-latest'
        run: |
          asset_name="target/release/libidena_wasm_mac-${tag}.a"
          mv target/release/${BINARY_NAME} ${asset_name}
          echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ env.ASSET_NAME }}

